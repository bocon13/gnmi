// Code generated by protoc-gen-go.
// source: proto/gnmi_ext/gnmi_ext.proto
// DO NOT EDIT!

/*
Package gnmi_ext is a generated protocol buffer package.

Package gnmi_ext defines a set of extensions messages which can be optionally
included with the request and response messages of gNMI RPCs. A set of
well-known extensions are defined within this file, along with a registry for
extensions defined outside of this package.

It is generated from these files:
	proto/gnmi_ext/gnmi_ext.proto

It has these top-level messages:
	Extension
	RegisteredExtension
	MasterArbitration
	Uint128
	Role
*/
package gnmi_ext

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// RegisteredExtension is an enumeration acting as a registry for extensions
// defined by external sources.
type ExtensionID int32

const (
	ExtensionID_EID_UNSET ExtensionID = 0
	// An experimental extension that may be used during prototyping of a new
	// extension.
	ExtensionID_EID_EXPERIMENTAL ExtensionID = 999
)

var ExtensionID_name = map[int32]string{
	0:   "EID_UNSET",
	999: "EID_EXPERIMENTAL",
}
var ExtensionID_value = map[string]int32{
	"EID_UNSET":        0,
	"EID_EXPERIMENTAL": 999,
}

func (x ExtensionID) String() string {
	return proto.EnumName(ExtensionID_name, int32(x))
}
func (ExtensionID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// The Extension message contains a single gNMI extension.
type Extension struct {
	// Types that are valid to be assigned to Ext:
	//	*Extension_RegisteredExt
	//	*Extension_MasterArbitration
	Ext isExtension_Ext `protobuf_oneof:"ext"`
}

func (m *Extension) Reset()                    { *m = Extension{} }
func (m *Extension) String() string            { return proto.CompactTextString(m) }
func (*Extension) ProtoMessage()               {}
func (*Extension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isExtension_Ext interface {
	isExtension_Ext()
}

type Extension_RegisteredExt struct {
	RegisteredExt *RegisteredExtension `protobuf:"bytes,1,opt,name=registered_ext,json=registeredExt,oneof"`
}
type Extension_MasterArbitration struct {
	MasterArbitration *MasterArbitration `protobuf:"bytes,2,opt,name=master_arbitration,json=masterArbitration,oneof"`
}

func (*Extension_RegisteredExt) isExtension_Ext()     {}
func (*Extension_MasterArbitration) isExtension_Ext() {}

func (m *Extension) GetExt() isExtension_Ext {
	if m != nil {
		return m.Ext
	}
	return nil
}

func (m *Extension) GetRegisteredExt() *RegisteredExtension {
	if x, ok := m.GetExt().(*Extension_RegisteredExt); ok {
		return x.RegisteredExt
	}
	return nil
}

func (m *Extension) GetMasterArbitration() *MasterArbitration {
	if x, ok := m.GetExt().(*Extension_MasterArbitration); ok {
		return x.MasterArbitration
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Extension) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Extension_OneofMarshaler, _Extension_OneofUnmarshaler, _Extension_OneofSizer, []interface{}{
		(*Extension_RegisteredExt)(nil),
		(*Extension_MasterArbitration)(nil),
	}
}

func _Extension_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Extension)
	// ext
	switch x := m.Ext.(type) {
	case *Extension_RegisteredExt:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RegisteredExt); err != nil {
			return err
		}
	case *Extension_MasterArbitration:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MasterArbitration); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Extension.Ext has unexpected type %T", x)
	}
	return nil
}

func _Extension_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Extension)
	switch tag {
	case 1: // ext.registered_ext
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RegisteredExtension)
		err := b.DecodeMessage(msg)
		m.Ext = &Extension_RegisteredExt{msg}
		return true, err
	case 2: // ext.master_arbitration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MasterArbitration)
		err := b.DecodeMessage(msg)
		m.Ext = &Extension_MasterArbitration{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Extension_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Extension)
	// ext
	switch x := m.Ext.(type) {
	case *Extension_RegisteredExt:
		s := proto.Size(x.RegisteredExt)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Extension_MasterArbitration:
		s := proto.Size(x.MasterArbitration)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The RegisteredExtension message defines an extension which is defined outside
// of this file.
type RegisteredExtension struct {
	Id  ExtensionID `protobuf:"varint,1,opt,name=id,enum=gnmi_ext.ExtensionID" json:"id,omitempty"`
	Msg []byte      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (m *RegisteredExtension) Reset()                    { *m = RegisteredExtension{} }
func (m *RegisteredExtension) String() string            { return proto.CompactTextString(m) }
func (*RegisteredExtension) ProtoMessage()               {}
func (*RegisteredExtension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegisteredExtension) GetId() ExtensionID {
	if m != nil {
		return m.Id
	}
	return ExtensionID_EID_UNSET
}

func (m *RegisteredExtension) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

// MasterArbitration is used to select the master among multiple gNMI clients
// with the same Roles. The client with the largest election_id is honored as
// the master.
// The document about gNMI master arbitration can be found at
// https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-master-arbitration.md
type MasterArbitration struct {
	Role       *Role    `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	ElectionId *Uint128 `protobuf:"bytes,2,opt,name=election_id,json=electionId" json:"election_id,omitempty"`
}

func (m *MasterArbitration) Reset()                    { *m = MasterArbitration{} }
func (m *MasterArbitration) String() string            { return proto.CompactTextString(m) }
func (*MasterArbitration) ProtoMessage()               {}
func (*MasterArbitration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MasterArbitration) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *MasterArbitration) GetElectionId() *Uint128 {
	if m != nil {
		return m.ElectionId
	}
	return nil
}

// Representation of unsigned 128-bit integer.
type Uint128 struct {
	High uint64 `protobuf:"varint,1,opt,name=high" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low" json:"low,omitempty"`
}

func (m *Uint128) Reset()                    { *m = Uint128{} }
func (m *Uint128) String() string            { return proto.CompactTextString(m) }
func (*Uint128) ProtoMessage()               {}
func (*Uint128) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Uint128) GetHigh() uint64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Uint128) GetLow() uint64 {
	if m != nil {
		return m.Low
	}
	return 0
}

// There can be one master for each role. The role is identified by its id.
type Role struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Role) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Extension)(nil), "gnmi_ext.Extension")
	proto.RegisterType((*RegisteredExtension)(nil), "gnmi_ext.RegisteredExtension")
	proto.RegisterType((*MasterArbitration)(nil), "gnmi_ext.MasterArbitration")
	proto.RegisterType((*Uint128)(nil), "gnmi_ext.Uint128")
	proto.RegisterType((*Role)(nil), "gnmi_ext.Role")
	proto.RegisterEnum("gnmi_ext.ExtensionID", ExtensionID_name, ExtensionID_value)
}

func init() { proto.RegisterFile("proto/gnmi_ext/gnmi_ext.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xdd, 0x6a, 0xf2, 0x40,
	0x14, 0xf4, 0x27, 0xdf, 0x67, 0x3d, 0xd6, 0x10, 0x4f, 0xb1, 0x08, 0x45, 0x28, 0x81, 0x42, 0x7f,
	0xc0, 0xd0, 0x78, 0xd3, 0x5b, 0xc5, 0x14, 0x03, 0x2a, 0x65, 0xab, 0x50, 0x7a, 0x13, 0xd4, 0x6c,
	0xe3, 0xd2, 0x24, 0x2b, 0xeb, 0x96, 0xfa, 0x48, 0x7d, 0xb3, 0xbe, 0x46, 0xd9, 0x45, 0x13, 0xfb,
	0x73, 0x77, 0x66, 0xce, 0xec, 0x9c, 0x19, 0x58, 0x68, 0xaf, 0x05, 0x97, 0xdc, 0x89, 0xd2, 0x84,
	0x05, 0x74, 0x2b, 0xb3, 0xa1, 0xa3, 0x79, 0x3c, 0xda, 0x63, 0xfb, 0xa3, 0x08, 0x55, 0x6f, 0x2b,
	0x69, 0xba, 0x61, 0x3c, 0xc5, 0x7b, 0x30, 0x05, 0x8d, 0xd8, 0x46, 0x52, 0x41, 0x43, 0xb5, 0x6f,
	0x15, 0xcf, 0x8b, 0x97, 0x35, 0xb7, 0xdd, 0xc9, 0x0c, 0x48, 0xb6, 0xcf, 0x9e, 0x0d, 0x0b, 0xa4,
	0x2e, 0x0e, 0x69, 0x1c, 0x01, 0x26, 0x73, 0x05, 0x83, 0xb9, 0x58, 0x30, 0x29, 0xe6, 0x92, 0xf1,
	0xb4, 0x55, 0xd2, 0x5e, 0x67, 0xb9, 0xd7, 0x58, 0x6b, 0x7a, 0xb9, 0x64, 0x58, 0x20, 0x8d, 0xe4,
	0x27, 0xd9, 0xff, 0x07, 0x65, 0x15, 0x75, 0x02, 0x27, 0x7f, 0x1c, 0xc7, 0x0b, 0x28, 0xb1, 0x50,
	0xe7, 0x34, 0xdd, 0x66, 0xee, 0x9d, 0x09, 0xfc, 0x01, 0x29, 0xb1, 0x10, 0x2d, 0x28, 0x27, 0x9b,
	0x48, 0x67, 0x38, 0x26, 0x6a, 0xb4, 0x5f, 0xa1, 0xf1, 0x2b, 0x00, 0xda, 0x60, 0x08, 0x1e, 0xd3,
	0x5d, 0x6f, 0xf3, 0xa0, 0x37, 0x8f, 0x29, 0xd1, 0x3b, 0x74, 0xa1, 0x46, 0x63, 0xba, 0x54, 0xfa,
	0x80, 0x85, 0xbb, 0x5a, 0x8d, 0x5c, 0x3a, 0x63, 0xa9, 0xbc, 0x75, 0xef, 0x08, 0xec, 0x55, 0x7e,
	0x68, 0x3b, 0x50, 0xd9, 0xd1, 0x88, 0x60, 0xac, 0x58, 0xb4, 0xd2, 0x27, 0x0c, 0xa2, 0x67, 0x95,
	0x2e, 0xe6, 0xef, 0xda, 0xca, 0x20, 0x6a, 0xb4, 0x4f, 0xc1, 0x50, 0x27, 0xd1, 0xcc, 0xea, 0x55,
	0x55, 0x8f, 0xeb, 0x2e, 0xd4, 0x0e, 0xaa, 0x61, 0x1d, 0xaa, 0x9e, 0x3f, 0x08, 0x66, 0x93, 0x47,
	0x6f, 0x6a, 0x15, 0xb0, 0x09, 0x96, 0x82, 0xde, 0xd3, 0x83, 0x47, 0xfc, 0xb1, 0x37, 0x99, 0xf6,
	0x46, 0xd6, 0x67, 0xa5, 0x7f, 0xf3, 0x7c, 0x15, 0x31, 0xb9, 0x7a, 0x5b, 0x74, 0x96, 0x3c, 0x71,
	0xf8, 0x9a, 0xa6, 0x4b, 0x9e, 0xbe, 0xb0, 0x48, 0xff, 0x0b, 0xe7, 0xfb, 0x5f, 0x59, 0xfc, 0xd7,
	0xb8, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0x59, 0x2f, 0x14, 0x31, 0x44, 0x02, 0x00, 0x00,
}
